ggplot(tmp, aes(Cluster))+
geom_bar(aes(fill = TCR),position = "fill")+
ggtitle("Percentage of cells from each clone per cluster")+
theme(axis.text.x = element_text(angle = 90)) +
scale_fill_manual(values=col, na.value = 'grey90')
ggplot(tmp, aes(Cluster))+
geom_bar(aes(fill = TCR),position = "fill")+
ggtitle("Percentage of cells from each clone per cluster")+
theme(axis.text.x = element_text(angle = 90)) +
scale_fill_manual(values=col, na.value = 'grey95')
col
length(unique_TCR)
rm(list = ls())
library(scales)
library(data.table)
library(dplyr)
library(magrittr)
library(ggplot2)
library(scales)
library(tidyr)
library(Seurat)
library(RColorBrewer)
library(ggridges)
library(utils)
library(cowplot)
analysisDir <- "C:/Users/amahfouz/surfdrive/Projects/Pleun_Bonn/new_15nov2019/Seurat_data/"
resDir <- "C:/Users/amahfouz/surfdrive/Projects/Pleun_Bonn/new_15nov2019/Results_AM/Manuscript_figures/"
seurat <- readRDS(file = paste0(analysisDir, "All_Tcells.rds"))
# Rename clusters
new.cluster.ids <- c("Lung-RBPJ", "Lung-GZMB", "Blood-GNLY", "Blood-KLRK1", "Tumor-ANXA1", "Blood-CCR7",
"Blood-SELL", "Blood-GZMK", "Tumor-GZMK", "Lung-CCL4", "Tumor-CXCL13", "Tumor-IKZF2",
"Tumor-ITGAE", "Blood-GZMK", "Blood-SELL")
names(new.cluster.ids) <- levels(seurat)
seurat <- RenameIdents(seurat, new.cluster.ids)
p1 <- DimPlot(seurat, reduction = "tsne", pt.size = 1, label = TRUE) + NoLegend()
p2 <- DimPlot(seurat, reduction = "tsne", pt.size = 1, label = TRUE, group.by = "status") + NoLegend()
p3 <- DimPlot(seurat, reduction = "tsne", pt.size = 1, label = TRUE, group.by = "compartment") + NoLegend()
plot_grid(p1, p2, p3, ncol = 3)
# add sort data------
seurat_TCR.adt <- as.sparse(read.csv(file = paste0(analysisDir, "Flow_data_ADT_filtered_umi_08112019.csv"), sep = ";", header = TRUE, row.names = 1, check.names=FALSE))
# some rows have the exact same cell ID and are annotated as both CD4 and CD8? (20 rows in total)
tmp <- row.names(seurat@meta.data)
tmp2 <- substr(tmp, 5, nchar(tmp))
toRemove <- row.names(seurat@meta.data)[which(tmp2 %in% tmp2[which(duplicated(tmp2))])]
seurat <- seurat[,!colnames(seurat) %in% toRemove]
tmp <- row.names(seurat@meta.data)
tmp2 <- substr(tmp, 5, nchar(tmp))
seurat_TCR.adt <- seurat_TCR.adt[,colnames(seurat_TCR.adt) %in% tmp2]
tmp <- row.names(seurat@meta.data[seurat@meta.data$compartment == "CD4",])
tmp2 <- substr(tmp, 5, nchar(tmp))
dimnames(seurat_TCR.adt)[[2]][dimnames(seurat_TCR.adt)[[2]] %in% tmp2] <- paste("CD4_",dimnames(seurat_TCR.adt)[[2]][dimnames(seurat_TCR.adt)[[2]] %in% tmp2],sep="")
tmp <- row.names(seurat@meta.data[seurat@meta.data$compartment == "CD8",])
tmp2 <- substr(tmp, 5, nchar(tmp))
dimnames(seurat_TCR.adt)[[2]][dimnames(seurat_TCR.adt)[[2]] %in% tmp2] <- paste("CD8_",dimnames(seurat_TCR.adt)[[2]][dimnames(seurat_TCR.adt)[[2]] %in% tmp2],sep="")
#Add sort and TCR data to the Seurat object
seurat[["ADT"]] <- CreateAssayObject(counts = seurat_TCR.adt)
tcr.markers <- row.names(seurat@assays$ADT)[9:60]
tcr.markers <- paste0("adt_",tcr.markers)
DotPlot(seurat, features = tcr.markers, cols = c("lightgrey", "blue"),) + RotatedAxis()
# add sort data------
seurat_TCR.adt <- as.sparse(read.csv(file = paste0(analysisDir, "Flow_data_ADT_filtered_umi_08112019.csv"), sep = ";", header = TRUE, row.names = 1, check.names=FALSE))
# some rows have the exact same cell ID and are annotated as both CD4 and CD8? (20 rows in total)
tmp <- row.names(seurat@meta.data)
tmp2 <- substr(tmp, 5, nchar(tmp))
toRemove <- row.names(seurat@meta.data)[which(tmp2 %in% tmp2[which(duplicated(tmp2))])]
seurat <- seurat[,!colnames(seurat) %in% toRemove]
tmp <- row.names(seurat@meta.data)
tmp2 <- substr(tmp, 5, nchar(tmp))
seurat_TCR.adt <- seurat_TCR.adt[,colnames(seurat_TCR.adt) %in% tmp2]
tmp <- row.names(seurat@meta.data[seurat@meta.data$compartment == "CD4",])
tmp2 <- substr(tmp, 5, nchar(tmp))
dimnames(seurat_TCR.adt)[[2]][dimnames(seurat_TCR.adt)[[2]] %in% tmp2] <- paste("CD4_",dimnames(seurat_TCR.adt)[[2]][dimnames(seurat_TCR.adt)[[2]] %in% tmp2],sep="")
tmp <- row.names(seurat@meta.data[seurat@meta.data$compartment == "CD8",])
tmp2 <- substr(tmp, 5, nchar(tmp))
dimnames(seurat_TCR.adt)[[2]][dimnames(seurat_TCR.adt)[[2]] %in% tmp2] <- paste("CD8_",dimnames(seurat_TCR.adt)[[2]][dimnames(seurat_TCR.adt)[[2]] %in% tmp2],sep="")
#Add sort and TCR data to the Seurat object
seurat[["ADT"]] <- CreateAssayObject(counts = seurat_TCR.adt)
tmp <- as.matrix(seurat@assays$ADT@counts[9:60,])
clone <- character(dim(tmp)[2])
for (i in 1 : dim(tmp)[2]){
if ( sum(tmp[,i]) != 0 ) {
clone[i] <- names(which(tmp[,i] != 0))
}
}
seurat@meta.data$clone.id <- clone
tcr_analysis_data <- seurat@meta.data
colnames(tcr_analysis_data)[6] <- "loc"
tcr_analysis_data$majorCluster <- Idents(seurat)
tcr_analysis_data$patient <- replicate(dim(tcr_analysis_data)[1], "patient_1")
tcr_analysis_data$Cell_Name <- rownames(tcr_analysis_data)
#remove cells with no clone info
tcr_analysis_data <- tcr_analysis_data[tcr_analysis_data$clone.id != "",]
tmp <- data.frame(TCR = tcr_analysis_data$clone.id,
Cluster = tcr_analysis_data$majorCluster)
nClust <- vector()
for (i in tmp$TCR){
nClust[i] <- length(unique(tmp$Cluster[tmp$TCR == i]))
}
unique_TCR <- names(which(nClust == 1))
'%!in%' <- function(x,y)!('%in%'(x,y))
tmp$TCR[tmp$TCR %!in% unique_TCR] <- NA
col
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual',]
col_vector = unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals)))
col=sample(col_vector, length(unique_TCR)+1)
col
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual',]
col_vector = unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals)))
col=sample(col_vector, 18)
col
col2 <- col[4,9,10,13,14,15,16,17,18]
col2 <- col[c(4,9,10,13,14,15,16,17,18)]
col=sample(col_vector, length(tcr_analysis_data))
unique_TCR
tcr.markers
clone
tcr.markers <- row.names(seurat@assays$ADT)[9:60]
DotPlot(seurat, features = tcr.markers, cols = c("lightgrey", "blue"),) + RotatedAxis()
tcr.markers
tcr.markers <- row.names(seurat@assays$ADT)[9:60]
tcr.markers2 <- paste0("adt_",tcr.markers)
DotPlot(seurat, features = tcr.markers2, cols = c("lightgrey", "blue"),) + RotatedAxis()
which(tcr.markers %in% unique_TCR)
col2 <- col[which(tcr.markers %in% unique_TCR)]
ggplot(tmp, aes(Cluster))+
geom_bar(aes(fill = TCR),position = "fill")+
ggtitle("Percentage of cells from each clone per cluster")+
theme(axis.text.x = element_text(angle = 90))+
scale_fill_manual(values=col, na.value = 'grey95')
tiff(paste0(resDir, "TCR_unique_perc.tiff"), width = 2000, height = 1000, units = "px", res = 100)
ggplot(tmp, aes(Cluster))+
geom_bar(aes(fill = TCR),position = "fill")+
ggtitle("Percentage of cells from each clone per cluster")+
theme(axis.text.x = element_text(angle = 90))+
scale_fill_manual(values=col, na.value = 'grey95')
dev.off()
tiff(paste0(resDir, "TCR_unique_number.tiff"), width = 2000, height = 1000, units = "px", res = 100)
ggplot(tmp, aes(Cluster))+
geom_bar(aes(fill = TCR))+
ggtitle("Number of cells from each clone per cluster")+
theme(axis.text.x = element_text(angle = 90))+
scale_fill_manual(values=col, na.value = 'grey95')
dev.off()
tcr.markers <- row.names(seurat_tissue@assays$ADT)[9:31]
rm(list = ls())
library(data.table)
library(dplyr)
library(magrittr)
library(ggplot2)
library(scales)
library(tidyr)
library(Seurat)
library(RColorBrewer)
library(ggridges)
library(utils)
library(cowplot)
analysisDir <- "C:/Users/amahfouz/surfdrive/Projects/Pleun_Bonn/new_15nov2019/Seurat_data/"
resDir <- "C:/Users/amahfouz/surfdrive/Projects/Pleun_Bonn/new_15nov2019/Results_AM/Manuscript_figures/"
seurat_tissue <- readRDS(file = paste0(analysisDir, "Tumor_Tcells.rds"))
# Rename clusters
new.cluster.ids <- c("Tumor-CCR7", "Tumor-GZMK", "Tumor-KLRC1", "Tumor-ITGAE", "Tumor-IKZF2", "Tumor-CXCL13")
names(new.cluster.ids) <- levels(seurat_tissue)
seurat_tissue <- RenameIdents(seurat_tissue, new.cluster.ids)
p2 <- DimPlot(seurat_tissue, reduction = "tsne", pt.size = 1, label = TRUE, label.size = 3, repel = TRUE) + NoLegend()
p1 <- DimPlot(seurat_tissue, reduction = "tsne", pt.size = 1, label = TRUE, label.size = 3, group.by = "compartment") + NoLegend()
plot_grid(p1, p2, ncol = 2)
# add sort data------
seurat_tissue_TCR.adt <- as.sparse(read.csv(file = paste0(analysisDir, "Flow_data_ADT_filtered_umi_08112019.csv"),
sep = ";", header = TRUE, row.names = 1, check.names=FALSE))
# some rows have the exact same cell ID and are annotated as both CD4 and CD8? (20 rows in total)
tmp <- row.names(seurat_tissue@meta.data)
tmp2 <- substr(tmp, 5, nchar(tmp))
toRemove <- row.names(seurat_tissue@meta.data)[which(tmp2 %in% tmp2[which(duplicated(tmp2))])]
seurat_tissue <- seurat_tissue[,!colnames(seurat_tissue) %in% toRemove]
tmp <- row.names(seurat_tissue@meta.data)
tmp2 <- substr(tmp, 5, nchar(tmp))
seurat_tissue_TCR.adt <- seurat_tissue_TCR.adt[,colnames(seurat_tissue_TCR.adt) %in% tmp2]
tmp <- row.names(seurat_tissue@meta.data[seurat_tissue@meta.data$compartment == "CD4",])
tmp2 <- substr(tmp, 5, nchar(tmp))
dimnames(seurat_tissue_TCR.adt)[[2]][dimnames(seurat_tissue_TCR.adt)[[2]] %in% tmp2] <- paste("CD4_",dimnames(seurat_tissue_TCR.adt)[[2]][dimnames(seurat_tissue_TCR.adt)[[2]] %in% tmp2],sep="")
tmp <- row.names(seurat_tissue@meta.data[seurat_tissue@meta.data$compartment == "CD8",])
tmp2 <- substr(tmp, 5, nchar(tmp))
dimnames(seurat_tissue_TCR.adt)[[2]][dimnames(seurat_tissue_TCR.adt)[[2]] %in% tmp2] <- paste("CD8_",dimnames(seurat_tissue_TCR.adt)[[2]][dimnames(seurat_tissue_TCR.adt)[[2]] %in% tmp2],sep="")
# remove empty markers
seurat_tissue_TCR.adt <- seurat_tissue_TCR.adt[which(rowSums(as.matrix(seurat_tissue_TCR.adt)) != 0), ]
#Add sort and TCR data to the seurat_tissue object
seurat_tissue[["ADT"]] <- CreateAssayObject(counts = seurat_tissue_TCR.adt)
seurat_tissue <- NormalizeData(seurat_tissue, assay = "ADT", normalization.method = "CLR")
seurat_tissue <- ScaleData(seurat_tissue, assay = "ADT")
tcr.markers <- row.names(seurat_tissue@assays$ADT)[9:31]
tcr.markers2 <- paste0("adt_",tcr.markers)
DotPlot(seurat_tissue, features = tcr.markers2, cols = c("lightgrey", "blue"),) + RotatedAxis()
tmp <- as.matrix(seurat_tissue@assays$ADT@counts[9:31,])
clone <- character(dim(tmp)[2])
for (i in 1 : dim(tmp)[2]){
if ( sum(tmp[,i]) != 0 ) {
clone[i] <- names(which(tmp[,i] != 0))
}
}
seurat_tissue@meta.data$clone.id <- clone
tcr_analysis_data <- seurat_tissue@meta.data
colnames(tcr_analysis_data)[6] <- "loc"
tcr_analysis_data$majorCluster <- Idents(seurat_tissue)
tcr_analysis_data$patient <- replicate(dim(tcr_analysis_data)[1], "patient_1")
tcr_analysis_data$Cell_Name <- rownames(tcr_analysis_data)
#remove cells with no clone info
tcr_analysis_data <- tcr_analysis_data[tcr_analysis_data$clone.id != "",]
tmp <- data.frame(TCR = tcr_analysis_data$clone.id,
Cluster = tcr_analysis_data$majorCluster)
nClust <- vector()
for (i in tmp$TCR){
nClust[i] <- length(unique(tmp$Cluster[tmp$TCR == i]))
}
unique_TCR <- names(which(nClust == 1))
'%!in%' <- function(x,y)!('%in%'(x,y))
tmp$TCR[tmp$TCR %!in% unique_TCR] <- NA
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual',]
col_vector = unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals)))
col=sample(col_vector, length(tcr_analysis_data))
col2 <- col[which(tcr.markers %in% unique_TCR)]
ggplot(tmp, aes(Cluster))+
geom_bar(aes(fill = TCR),position = "fill")+
ggtitle("Percentage of cells from each clone per cluster")+
theme(axis.text.x = element_text(angle = 90)) +
scale_fill_manual(values=col, na.value = 'grey95')
which(tcr.markers %in% unique_TCR)
ggplot(tmp, aes(Cluster))+
geom_bar(aes(fill = TCR),position = "fill")+
ggtitle("Percentage of cells from each clone per cluster")+
theme(axis.text.x = element_text(angle = 90)) +
scale_fill_manual(values=col, na.value = 'grey95')
tcr.markers
col=sample(col_vector, 52)
col2 <- col[which(tcr.markers %in% unique_TCR)]
ggplot(tmp, aes(Cluster))+
geom_bar(aes(fill = TCR),position = "fill")+
ggtitle("Percentage of cells from each clone per cluster")+
theme(axis.text.x = element_text(angle = 90)) +
scale_fill_manual(values=col, na.value = 'grey95')
which(tcr.markers %in% unique_TCR)
substr(unique_TCR, 4, 5)
unique_TCR
as.numeric(substr(unique_TCR, 4, 5))
col2 <- col[as.numeric(substr(unique_TCR, 4, 5))]
ggplot(tmp, aes(Cluster))+
geom_bar(aes(fill = TCR),position = "fill")+
ggtitle("Percentage of cells from each clone per cluster")+
theme(axis.text.x = element_text(angle = 90)) +
scale_fill_manual(values=col, na.value = 'grey95')
col
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual',]
col_vector = unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals)))
col=sample(col_vector, 52)
col2 <- col[as.numeric(substr(unique_TCR, 4, 5))]
tiff(paste0(resDir, "TCR_unique_perc_tumor.tiff"), width = 2000, height = 1000, units = "px", res = 100)
ggplot(tmp, aes(Cluster))+
geom_bar(aes(fill = TCR),position = "fill")+
ggtitle("Percentage of cells from each clone per cluster")+
theme(axis.text.x = element_text(angle = 90)) +
scale_fill_manual(values=col, na.value = 'grey95')
dev.off()
tiff(paste0(resDir, "TCR_unique_number_tumor.tiff"), width = 2000, height = 1000, units = "px", res = 100)
ggplot(tmp, aes(Cluster))+
geom_bar(aes(fill = TCR))+
ggtitle("Number of cells from each clone per cluster")+
theme(axis.text.x = element_text(angle = 90))+
scale_fill_manual(values=col, na.value = 'grey95')
dev.off()
unique_TCR
as.numeric(substr(unique_TCR, 4, 5))
as.numeric(substr(unique_TCR, 4, 5))[16]+1
rm(list = ls())
library(data.table)
library(dplyr)
library(magrittr)
library(ggplot2)
library(scales)
library(tidyr)
library(Seurat)
library(RColorBrewer)
library(ggridges)
library(utils)
library(cowplot)
analysisDir <- "C:/Users/amahfouz/surfdrive/Projects/Pleun_Bonn/new_15nov2019/Seurat_data/"
resDir <- "C:/Users/amahfouz/surfdrive/Projects/Pleun_Bonn/new_15nov2019/Results_AM/Manuscript_figures/"
seurat <- readRDS(file = paste0(analysisDir, "All_Tcells.rds"))
# Rename clusters
new.cluster.ids <- c("Lung-RBPJ", "Lung-GZMB", "Blood-GNLY", "Blood-KLRK1", "Tumor-ANXA1", "Blood-CCR7",
"Blood-SELL", "Blood-GZMK", "Tumor-GZMK", "Lung-CCL4", "Tumor-CXCL13", "Tumor-IKZF2",
"Tumor-ITGAE", "Blood-GZMK", "Blood-SELL")
names(new.cluster.ids) <- levels(seurat)
seurat <- RenameIdents(seurat, new.cluster.ids)
p1 <- DimPlot(seurat, reduction = "tsne", pt.size = 1, label = TRUE) + NoLegend()
p2 <- DimPlot(seurat, reduction = "tsne", pt.size = 1, label = TRUE, group.by = "status") + NoLegend()
p3 <- DimPlot(seurat, reduction = "tsne", pt.size = 1, label = TRUE, group.by = "compartment") + NoLegend()
plot_grid(p1, p2, p3, ncol = 3)
# add sort data------
seurat_TCR.adt <- as.sparse(read.csv(file = paste0(analysisDir, "Flow_data_ADT_filtered_umi_08112019.csv"), sep = ";", header = TRUE, row.names = 1, check.names=FALSE))
# some rows have the exact same cell ID and are annotated as both CD4 and CD8? (20 rows in total)
tmp <- row.names(seurat@meta.data)
tmp2 <- substr(tmp, 5, nchar(tmp))
toRemove <- row.names(seurat@meta.data)[which(tmp2 %in% tmp2[which(duplicated(tmp2))])]
seurat <- seurat[,!colnames(seurat) %in% toRemove]
tmp <- row.names(seurat@meta.data)
tmp2 <- substr(tmp, 5, nchar(tmp))
seurat_TCR.adt <- seurat_TCR.adt[,colnames(seurat_TCR.adt) %in% tmp2]
tmp <- row.names(seurat@meta.data[seurat@meta.data$compartment == "CD4",])
tmp2 <- substr(tmp, 5, nchar(tmp))
dimnames(seurat_TCR.adt)[[2]][dimnames(seurat_TCR.adt)[[2]] %in% tmp2] <- paste("CD4_",dimnames(seurat_TCR.adt)[[2]][dimnames(seurat_TCR.adt)[[2]] %in% tmp2],sep="")
tmp <- row.names(seurat@meta.data[seurat@meta.data$compartment == "CD8",])
tmp2 <- substr(tmp, 5, nchar(tmp))
dimnames(seurat_TCR.adt)[[2]][dimnames(seurat_TCR.adt)[[2]] %in% tmp2] <- paste("CD8_",dimnames(seurat_TCR.adt)[[2]][dimnames(seurat_TCR.adt)[[2]] %in% tmp2],sep="")
#Add sort and TCR data to the Seurat object
seurat[["ADT"]] <- CreateAssayObject(counts = seurat_TCR.adt)
tcr.markers <- row.names(seurat@assays$ADT)[9:60]
tcr.markers2 <- paste0("adt_",tcr.markers)
DotPlot(seurat, features = tcr.markers2, cols = c("lightgrey", "blue"),) + RotatedAxis()
tmp <- as.matrix(seurat@assays$ADT@counts[9:60,])
clone <- character(dim(tmp)[2])
for (i in 1 : dim(tmp)[2]){
if ( sum(tmp[,i]) != 0 ) {
clone[i] <- names(which(tmp[,i] != 0))
}
}
seurat@meta.data$clone.id <- clone
tcr_analysis_data <- seurat@meta.data
colnames(tcr_analysis_data)[6] <- "loc"
tcr_analysis_data$majorCluster <- Idents(seurat)
tcr_analysis_data$patient <- replicate(dim(tcr_analysis_data)[1], "patient_1")
tcr_analysis_data$Cell_Name <- rownames(tcr_analysis_data)
#remove cells with no clone info
tcr_analysis_data <- tcr_analysis_data[tcr_analysis_data$clone.id != "",]
tmp <- data.frame(TCR = tcr_analysis_data$clone.id,
Cluster = tcr_analysis_data$majorCluster)
nClust <- vector()
for (i in tmp$TCR){
nClust[i] <- length(unique(tmp$Cluster[tmp$TCR == i]))
}
unique_TCR <- names(which(nClust == 1))
'%!in%' <- function(x,y)!('%in%'(x,y))
tmp$TCR[tmp$TCR %!in% unique_TCR] <- NA
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual',]
col_vector = unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals)))
col=sample(col_vector, 52)
col2 <- col[as.numeric(substr(unique_TCR, 4, 5))]
unique_TCR
as.numeric(substr(unique_TCR, 4, 5))
col
save(col, paste0(analysisDir, "col.RData"))
save(paste0(analysisDir, "col.RData"), col)
save(file = paste0(analysisDir, "col.RData"), col)
col2 <- col[as.numeric(substr(unique_TCR, 4, 5))]
tiff(paste0(resDir, "TCR_unique_perc.tiff"), width = 2000, height = 1000, units = "px", res = 100)
ggplot(tmp, aes(Cluster))+
geom_bar(aes(fill = TCR),position = "fill")+
ggtitle("Percentage of cells from each clone per cluster")+
theme(axis.text.x = element_text(angle = 90))+
scale_fill_manual(values=col, na.value = 'grey95')
dev.off()
tiff(paste0(resDir, "TCR_unique_number.tiff"), width = 2000, height = 1000, units = "px", res = 100)
ggplot(tmp, aes(Cluster))+
geom_bar(aes(fill = TCR))+
ggtitle("Number of cells from each clone per cluster")+
theme(axis.text.x = element_text(angle = 90))+
scale_fill_manual(values=col, na.value = 'grey95')
dev.off()
col=sample(col_vector, 52)
ggplot(tmp, aes(Cluster))+
geom_bar(aes(fill = TCR),position = "fill")+
ggtitle("Percentage of cells from each clone per cluster")+
theme(axis.text.x = element_text(angle = 90))+
scale_fill_manual(values=col, na.value = 'grey95')
col=sample(col_vector, 52)
ggplot(tmp, aes(Cluster))+
geom_bar(aes(fill = TCR),position = "fill")+
ggtitle("Percentage of cells from each clone per cluster")+
theme(axis.text.x = element_text(angle = 90))+
scale_fill_manual(values=col, na.value = 'grey95')
ggplot(tmp, aes(Cluster))+
geom_bar(aes(fill = TCR),position = "fill")+
ggtitle("Percentage of cells from each clone per cluster")+
theme(axis.text.x = element_text(angle = 90))+
scale_fill_manual(values=col2, na.value = 'grey95')
col=sample(col_vector, 52)
col2 <- col[as.numeric(substr(unique_TCR, 4, 5))]
ggplot(tmp, aes(Cluster))+
geom_bar(aes(fill = TCR),position = "fill")+
ggtitle("Percentage of cells from each clone per cluster")+
theme(axis.text.x = element_text(angle = 90))+
scale_fill_manual(values=col2, na.value = 'grey95')
col=sample(col_vector, 52)
col2 <- col[as.numeric(substr(unique_TCR, 4, 5))]
ggplot(tmp, aes(Cluster))+
geom_bar(aes(fill = TCR),position = "fill")+
ggtitle("Percentage of cells from each clone per cluster")+
theme(axis.text.x = element_text(angle = 90))+
scale_fill_manual(values=col2, na.value = 'grey95')
ggplot(tmp, aes(Cluster))+
geom_bar(aes(fill = TCR),position = "fill")+
ggtitle("Percentage of cells from each clone per cluster")+
theme(axis.text.x = element_text(angle = 90))+
scale_fill_manual(values=col2, na.value = 'grey95')
save(file = paste0(analysisDir, "col.RData"), col)
col2 <- col[as.numeric(substr(unique_TCR, 4, 5))]
tiff(paste0(resDir, "TCR_unique_perc.tiff"), width = 2000, height = 1000, units = "px", res = 100)
ggplot(tmp, aes(Cluster))+
geom_bar(aes(fill = TCR),position = "fill")+
ggtitle("Percentage of cells from each clone per cluster")+
theme(axis.text.x = element_text(angle = 90))+
scale_fill_manual(values=col2, na.value = 'grey95')
dev.off()
tiff(paste0(resDir, "TCR_unique_number.tiff"), width = 2000, height = 1000, units = "px", res = 100)
ggplot(tmp, aes(Cluster))+
geom_bar(aes(fill = TCR))+
ggtitle("Number of cells from each clone per cluster")+
theme(axis.text.x = element_text(angle = 90))+
scale_fill_manual(values=col2, na.value = 'grey95')
dev.off()
rm(list = ls())
library(data.table)
library(dplyr)
library(magrittr)
library(ggplot2)
library(scales)
library(tidyr)
library(Seurat)
library(RColorBrewer)
library(ggridges)
library(utils)
library(cowplot)
analysisDir <- "C:/Users/amahfouz/surfdrive/Projects/Pleun_Bonn/new_15nov2019/Seurat_data/"
resDir <- "C:/Users/amahfouz/surfdrive/Projects/Pleun_Bonn/new_15nov2019/Results_AM/Manuscript_figures/"
seurat_tissue <- readRDS(file = paste0(analysisDir, "Tumor_Tcells.rds"))
# Rename clusters
new.cluster.ids <- c("Tumor-CCR7", "Tumor-GZMK", "Tumor-KLRC1", "Tumor-ITGAE", "Tumor-IKZF2", "Tumor-CXCL13")
names(new.cluster.ids) <- levels(seurat_tissue)
seurat_tissue <- RenameIdents(seurat_tissue, new.cluster.ids)
p2 <- DimPlot(seurat_tissue, reduction = "tsne", pt.size = 1, label = TRUE, label.size = 3, repel = TRUE) + NoLegend()
p1 <- DimPlot(seurat_tissue, reduction = "tsne", pt.size = 1, label = TRUE, label.size = 3, group.by = "compartment") + NoLegend()
plot_grid(p1, p2, ncol = 2)
# add sort data------
seurat_tissue_TCR.adt <- as.sparse(read.csv(file = paste0(analysisDir, "Flow_data_ADT_filtered_umi_08112019.csv"),
sep = ";", header = TRUE, row.names = 1, check.names=FALSE))
# some rows have the exact same cell ID and are annotated as both CD4 and CD8? (20 rows in total)
tmp <- row.names(seurat_tissue@meta.data)
tmp2 <- substr(tmp, 5, nchar(tmp))
toRemove <- row.names(seurat_tissue@meta.data)[which(tmp2 %in% tmp2[which(duplicated(tmp2))])]
seurat_tissue <- seurat_tissue[,!colnames(seurat_tissue) %in% toRemove]
tmp <- row.names(seurat_tissue@meta.data)
tmp2 <- substr(tmp, 5, nchar(tmp))
seurat_tissue_TCR.adt <- seurat_tissue_TCR.adt[,colnames(seurat_tissue_TCR.adt) %in% tmp2]
tmp <- row.names(seurat_tissue@meta.data[seurat_tissue@meta.data$compartment == "CD4",])
tmp2 <- substr(tmp, 5, nchar(tmp))
dimnames(seurat_tissue_TCR.adt)[[2]][dimnames(seurat_tissue_TCR.adt)[[2]] %in% tmp2] <- paste("CD4_",dimnames(seurat_tissue_TCR.adt)[[2]][dimnames(seurat_tissue_TCR.adt)[[2]] %in% tmp2],sep="")
tmp <- row.names(seurat_tissue@meta.data[seurat_tissue@meta.data$compartment == "CD8",])
tmp2 <- substr(tmp, 5, nchar(tmp))
dimnames(seurat_tissue_TCR.adt)[[2]][dimnames(seurat_tissue_TCR.adt)[[2]] %in% tmp2] <- paste("CD8_",dimnames(seurat_tissue_TCR.adt)[[2]][dimnames(seurat_tissue_TCR.adt)[[2]] %in% tmp2],sep="")
# remove empty markers
seurat_tissue_TCR.adt <- seurat_tissue_TCR.adt[which(rowSums(as.matrix(seurat_tissue_TCR.adt)) != 0), ]
#Add sort and TCR data to the seurat_tissue object
seurat_tissue[["ADT"]] <- CreateAssayObject(counts = seurat_tissue_TCR.adt)
seurat_tissue <- NormalizeData(seurat_tissue, assay = "ADT", normalization.method = "CLR")
seurat_tissue <- ScaleData(seurat_tissue, assay = "ADT")
tcr.markers <- row.names(seurat_tissue@assays$ADT)[9:31]
tcr.markers2 <- paste0("adt_",tcr.markers)
DotPlot(seurat_tissue, features = tcr.markers2, cols = c("lightgrey", "blue"),) + RotatedAxis()
tmp <- as.matrix(seurat_tissue@assays$ADT@counts[9:31,])
clone <- character(dim(tmp)[2])
for (i in 1 : dim(tmp)[2]){
if ( sum(tmp[,i]) != 0 ) {
clone[i] <- names(which(tmp[,i] != 0))
}
}
seurat_tissue@meta.data$clone.id <- clone
tcr_analysis_data <- seurat_tissue@meta.data
colnames(tcr_analysis_data)[6] <- "loc"
tcr_analysis_data$majorCluster <- Idents(seurat_tissue)
tcr_analysis_data$patient <- replicate(dim(tcr_analysis_data)[1], "patient_1")
tcr_analysis_data$Cell_Name <- rownames(tcr_analysis_data)
#remove cells with no clone info
tcr_analysis_data <- tcr_analysis_data[tcr_analysis_data$clone.id != "",]
tmp <- data.frame(TCR = tcr_analysis_data$clone.id,
Cluster = tcr_analysis_data$majorCluster)
nClust <- vector()
for (i in tmp$TCR){
nClust[i] <- length(unique(tmp$Cluster[tmp$TCR == i]))
}
unique_TCR <- names(which(nClust == 1))
'%!in%' <- function(x,y)!('%in%'(x,y))
tmp$TCR[tmp$TCR %!in% unique_TCR] <- NA
col <- load(file = paste0(analysisDir, "col.RData"))
load(file = paste0(analysisDir, "col.RData"))
col2 <- col[as.numeric(substr(unique_TCR, 4, 5))]
ggplot(tmp, aes(Cluster))+
geom_bar(aes(fill = TCR),position = "fill")+
ggtitle("Percentage of cells from each clone per cluster")+
theme(axis.text.x = element_text(angle = 90)) +
scale_fill_manual(values=col, na.value = 'grey95')
load(file = paste0(analysisDir, "col.RData"))
col2 <- col[as.numeric(substr(unique_TCR, 4, 5))]
ggplot(tmp, aes(Cluster))+
geom_bar(aes(fill = TCR),position = "fill")+
ggtitle("Percentage of cells from each clone per cluster")+
theme(axis.text.x = element_text(angle = 90)) +
scale_fill_manual(values=col2, na.value = 'grey95')
setwd("C:/Users/amahfouz/Documents/GitHub/MG-analysis")
curr.dir <- "~/data/"
gtex <- read.table(paste0(curr.dir, "GTEx_Analysis_2017-06-05_v8_RNASeQCv1.1.9_gene_median_tpm.gct"), sep = "\t", comment.char = "#", header = TRUE, skip = 2)
getwd()
curr.dir <- "./data/"
paste0(curr.dir, "GTEx_Analysis_2017-06-05_v8_RNASeQCv1.1.9_gene_median_tpm.gct")
gtex <- read.table(paste0(curr.dir, "GTEx_Analysis_2017-06-05_v8_RNASeQCv1.1.9_gene_median_tpm.gct"), sep = "\t", comment.char = "#", header = TRUE, skip = 2)
